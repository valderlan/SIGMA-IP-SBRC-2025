# Generated by Django 5.1.2 on 2024-10-25 17:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='bl_address_local',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=45, unique=True)),
                ('country_code', models.CharField(max_length=3, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('abuse_confidence_score', models.IntegerField(null=True)),
                ('last_reported_at', models.DateTimeField(blank=True, null=True)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True)),
                ('src_latitude', models.FloatField(null=True)),
                ('src_longitude', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='bl_local_cache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=45, unique=True)),
                ('country_code', models.CharField(max_length=3, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('abuse_confidence_score', models.IntegerField(null=True)),
                ('last_reported_at', models.DateTimeField(blank=True, null=True)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='tp_address_local',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=45, unique=True)),
                ('country_code', models.CharField(max_length=3, null=True)),
                ('abuse_confidence_score', models.IntegerField(null=True)),
                ('last_reported_at', models.DateTimeField(blank=True, null=True)),
                ('src_longitude', models.FloatField(null=True)),
                ('src_latitude', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='wl_address_local',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=45, unique=True)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='network_traffic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(null=True)),
                ('src_ip', models.CharField(max_length=45, null=True)),
                ('dst_ip', models.CharField(max_length=45, null=True)),
                ('protocol_name', models.CharField(max_length=50, null=True)),
                ('src_service', models.CharField(max_length=50, null=True)),
                ('dst_service', models.CharField(max_length=50, null=True)),
                ('src_country_code', models.CharField(max_length=3, null=True)),
                ('src_city', models.CharField(max_length=255, null=True)),
                ('src_latitude', models.FloatField(null=True)),
                ('src_longitude', models.FloatField(null=True)),
                ('dst_country_code', models.CharField(max_length=3, null=True)),
                ('dst_city', models.CharField(max_length=255, null=True)),
                ('dst_latitude', models.FloatField(null=True)),
                ('dst_longitude', models.FloatField(null=True)),
                ('src_port', models.IntegerField(null=True)),
                ('dst_port', models.IntegerField(null=True)),
                ('connection_time', models.FloatField(null=True)),
            ],
            options={
                'unique_together': {('timestamp', 'src_ip', 'dst_ip', 'protocol_name', 'src_service', 'dst_service', 'src_country_code', 'src_city', 'src_latitude', 'src_longitude', 'dst_country_code', 'dst_city', 'dst_latitude', 'dst_longitude', 'src_port', 'dst_port', 'connection_time')},
            },
        ),
    ]
